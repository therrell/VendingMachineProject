{"ast":null,"code":"var _jsxFileName = \"/Users/ashnaanil/Desktop/project/411frontend/src/components/Location.jsx\";\nimport React, { Component } from 'react';\nimport { render } from \"react-dom\";\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport \"./styles/loc.css\";\nconst apiLink = '';\n\nclass Location extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.distance = this.distance.bind(this);\n  }\n\n  distance(lat1, lon1, lat2, lon2, unit) {\n    if (lat1 == lat2 && lon1 == lon2) {\n      return 0;\n    } else {\n      var radlat1 = Math.PI * lat1 / 180;\n      var radlat2 = Math.PI * lat2 / 180;\n      var theta = lon1 - lon2;\n      var radtheta = Math.PI * theta / 180;\n      var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n\n      if (dist > 1) {\n        dist = 1;\n      }\n\n      dist = Math.acos(dist);\n      dist = dist * 180 / Math.PI;\n      dist = dist * 60 * 1.1515;\n\n      if (unit == \"K\") {\n        dist = dist * 1.609344;\n      }\n\n      if (unit == \"N\") {\n        dist = dist * 0.8684;\n      }\n\n      return dist;\n    }\n  }\n\n  componentDidMount(props) {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      var dis = this.distance(position.coords.latitude, position.coords.longitude, 10, 20, 'N');\n      console.log(\"Latitude is :\", position.coords.latitude);\n      console.log(\"Longitude is :\", position.coords.longitude);\n      console.log(\"Distance is :\", dis);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Vending Machine Locator\"), /*#__PURE__*/React.createElement(Paper, {\n      className: \"paper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, \"My Location\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, \" Distances:\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"form\",\n      fullWidth: true,\n      onClick: this.distance(0, 0, 0, 0),\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, \"Distances\")));\n  }\n\n}\n\nrender( /*#__PURE__*/React.createElement(Location, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 8\n  }\n}), document.getElementById(\"root\"));\nexport default Location;","map":{"version":3,"sources":["/Users/ashnaanil/Desktop/project/411frontend/src/components/Location.jsx"],"names":["React","Component","render","Link","Redirect","axios","Typography","TextField","Button","IconButton","Paper","apiLink","Location","constructor","props","state","distance","bind","lat1","lon1","lat2","lon2","unit","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","componentDidMount","navigator","geolocation","getCurrentPosition","position","dis","coords","latitude","longitude","console","log","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { render } from \"react-dom\";\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport \"./styles/loc.css\"\n\n\nconst apiLink = '';\n\nclass Location extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n        this.distance = this.distance.bind(this);\n    };\n\ndistance(lat1, lon1, lat2, lon2, unit) {\n    \tif ((lat1 == lat2) && (lon1 == lon2)) {\n    \t\treturn 0;\n    \t}\n    \telse {\n    \t\tvar radlat1 = Math.PI * lat1/180;\n    \t\tvar radlat2 = Math.PI * lat2/180;\n    \t\tvar theta = lon1-lon2;\n    \t\tvar radtheta = Math.PI * theta/180;\n    \t\tvar dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n    \t\tif (dist > 1) {\n    \t\t\tdist = 1;\n    \t\t}\n    \t\tdist = Math.acos(dist);\n    \t\tdist = dist * 180/Math.PI;\n    \t\tdist = dist * 60 * 1.1515;\n    \t\tif (unit==\"K\") { dist = dist * 1.609344 }\n    \t\tif (unit==\"N\") { dist = dist * 0.8684 }\n    \t\treturn dist;\n    \t}\n}\n\ncomponentDidMount(props) {\n      navigator.geolocation.getCurrentPosition(function(position) {\n        var dis = this.distance(position.coords.latitude, position.coords.longitude, 10, 20, 'N');\n        console.log(\"Latitude is :\", position.coords.latitude);\n        console.log(\"Longitude is :\", position.coords.longitude);\n        console.log(\"Distance is :\", dis);\n      });\n}\n\n\nrender() {\n        return (\n            <div className=\"container\">\n                <Typography variant=\"h2\">\n                    Vending Machine Locator\n                </Typography>\n                <Paper className=\"paper\">\n                    <Typography variant=\"h4\">\n                        My Location\n                    </Typography>\n                </Paper>\n                <div>\n                  <h4> Distances:</h4>\n                  <Button\n                      className=\"form\"\n                      fullWidth\n                      onClick={this.distance(0,0,0,0)}\n                      variant=\"contained\"\n                      color=\"primary\"\n                  >\n                      Distances\n                  </Button>\n                </div>\n            </div>\n        )\n    }\n}\nrender(<Location />, document.getElementById(\"root\"));\n\nexport default (Location);\n"]},"metadata":{},"sourceType":"module"}